From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AltronMaxX <max06112004@gmail.com>
Date: Wed, 31 Jul 2024 15:06:59 +0400
Subject: [PATCH] Pufferfish-Only-check-for-spooky-season-once-an-hour


diff --git a/src/main/java/net/minecraft/world/entity/ambient/Bat.java b/src/main/java/net/minecraft/world/entity/ambient/Bat.java
index dc27ddf5131e7398a5390a5187261d4c7fb6ccaa..daf1ca43b154dbff5ceb16c2366473fa3de260f8 100644
--- a/src/main/java/net/minecraft/world/entity/ambient/Bat.java
+++ b/src/main/java/net/minecraft/world/entity/ambient/Bat.java
@@ -3,6 +3,10 @@ package net.minecraft.world.entity.ambient;
 import java.time.LocalDate;
 import java.time.temporal.ChronoField;
 import javax.annotation.Nullable;
+
+import io.papermc.paper.threadedregions.ThreadedRegionizer;
+import io.papermc.paper.threadedregions.TickRegionScheduler;
+import io.papermc.paper.threadedregions.TickRegions;
 import net.minecraft.core.BlockPos;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.syncher.EntityDataAccessor;
@@ -239,12 +243,24 @@ public class Bat extends AmbientCreature {
         }
     }
 
-    private static boolean isHalloween() {
-        LocalDate localdate = LocalDate.now();
-        int i = localdate.get(ChronoField.DAY_OF_MONTH);
-        int j = localdate.get(ChronoField.MONTH_OF_YEAR);
+    private static boolean isSpookySeason = false;
+    private static final int ONE_HOUR = 20 * 60 * 60;
+    private static int lastSpookyCheck = -ONE_HOUR;
 
-        return j == 10 && i >= 20 || j == 11 && i <= 3;
+    private static boolean isHalloween() {
+        final ThreadedRegionizer.ThreadedRegion<TickRegions.TickRegionData, TickRegions.TickRegionSectionData> region =
+            TickRegionScheduler.getCurrentRegion();
+        final long tickCount = region.getData().getCurrentTick();
+        if (tickCount - lastSpookyCheck > ONE_HOUR) {
+            LocalDate localdate = LocalDate.now();
+            int i = localdate.getDayOfMonth();
+            int j = localdate.getMonth().getValue();
+
+            //return j == 10 && i >= 20 || j == 11 && i <= 3;
+            isSpookySeason = j == 10 && i >= 20 || j == 11 && i <= 3;
+            lastSpookyCheck = (int) tickCount;
+        }
+        return isSpookySeason;
     }
 
     private void setupAnimationStates() {
