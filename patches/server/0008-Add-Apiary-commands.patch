From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AltronMaxX <max06112004@gmail.com>
Date: Wed, 31 Jul 2024 14:55:42 +0400
Subject: [PATCH] Add-Apiary-commands


diff --git a/src/main/java/net/ssquadteam/apiary/commands/ApiaryCommand.java b/src/main/java/net/ssquadteam/apiary/commands/ApiaryCommand.java
new file mode 100644
index 0000000000000000000000000000000000000000..a4bbdbb119c9e9c15265cd06831ee7a0c1f54622
--- /dev/null
+++ b/src/main/java/net/ssquadteam/apiary/commands/ApiaryCommand.java
@@ -0,0 +1,66 @@
+package net.ssquadteam.apiary.commands;
+
+import java.io.File;
+import java.util.Collections;
+import java.util.List;
+import java.util.stream.Collectors;
+import java.util.stream.Stream;
+
+import net.ssquadteam.apiary.config.ApiaryConfig;
+import net.kyori.adventure.text.Component;
+import net.kyori.adventure.text.format.TextColor;
+import net.kyori.adventure.text.format.TextDecoration;
+import net.minecraft.server.MinecraftServer;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.command.Command;
+import org.bukkit.command.CommandSender;
+import org.jetbrains.annotations.NotNull;
+
+public class ApiaryCommand extends Command {
+
+    public static void init() {
+        MinecraftServer.getServer().server.getCommandMap().register("apiary", "Apiary", new ApiaryCommand());
+    }
+
+    protected ApiaryCommand() {
+        super("apiary");
+        this.description = "Apiary related commands";
+        this.usageMessage = "/apiary [reload | version]";
+        this.setPermission("bukkit.command.apiary");
+    }
+
+    @Override
+    public @NotNull List<String> tabComplete(@NotNull CommandSender sender, @NotNull String alias, String[] args, Location location) throws IllegalArgumentException {
+        if (args.length == 1) {
+            return Stream.of("reload", "version")
+                .filter(arg -> arg.startsWith(args[0].toLowerCase()))
+                .collect(Collectors.toList());
+        }
+        return Collections.emptyList();
+    }
+
+    @Override
+    public boolean execute(@NotNull CommandSender sender, @NotNull String commandLabel, @NotNull String[] args) {
+        if (!testPermission(sender)) return true;
+        Component prefix = Component.text("Apiary Â» ", TextColor.fromHexString("#12fff6"), TextDecoration.BOLD);
+
+        if (args.length != 1) {
+            sender.sendMessage(prefix.append(Component.text("Usage: " + usageMessage).color(TextColor.fromHexString("#e8f9f9"))));
+            args = new String[]{"version"};
+        }
+
+        if (args[0].equalsIgnoreCase("reload")) {
+            MinecraftServer console = MinecraftServer.getServer();
+            ApiaryConfig.init(new File("apiary.yml"));
+            console.server.reloadCount++;
+
+            Command.broadcastCommandMessage(sender, prefix.append(Component.text("Apiary configuration has been reloaded.").color(TextColor.fromHexString("#e8f9f9"))));
+        } else if (args[0].equalsIgnoreCase("version")) {
+            Command.broadcastCommandMessage(sender, prefix.append(Component.text("This server is running " + Bukkit.getName() + " version " +
+                Bukkit.getVersion() + " (Implementing API version " + Bukkit.getBukkitVersion() + ")").color(TextColor.fromHexString("#e8f9f9"))));
+        }
+
+        return true;
+    }
+}
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index a196839396e9a54c449b7dd5f1953a8a16657ba4..6a140fa920002798f7e88f699416ae04d6a4915b 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -246,6 +246,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
             DedicatedServer.LOGGER.error("Unable to load server configuration", e);
             return false;
         }
+        net.ssquadteam.apiary.commands.ApiaryCommand.init(); // Apiary

         this.setPvpAllowed(dedicatedserverproperties.pvp);
         this.setFlightAllowed(dedicatedserverproperties.allowFlight);
